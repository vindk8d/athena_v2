version: '3.8'

services:
  # Python Backend Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: athena-backend
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
      - ./.env:/app/.env
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=development
    command: uvicorn src.api.main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      - redis
    networks:
      - athena-network
    restart: unless-stopped

  # Next.js Frontend Service  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    container_name: athena-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/package.json:/app/package.json
      - ./frontend/package-lock.json:/app/package-lock.json
      - ./frontend/tsconfig.json:/app/tsconfig.json
      - ./frontend/tailwind.config.js:/app/tailwind.config.js
      - ./frontend/next.config.js:/app/next.config.js
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - NEXT_PUBLIC_BACKEND_URL=http://backend:8000
    command: npm run dev
    depends_on:
      - backend
    networks:
      - athena-network
    restart: unless-stopped

  # Redis for session management and caching
  redis:
    image: redis:7-alpine
    container_name: athena-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - athena-network
    restart: unless-stopped

  # Development Database (PostgreSQL) - Optional local DB for testing
  postgres:
    image: postgres:15-alpine
    container_name: athena-postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    environment:
      - POSTGRES_DB=athena_dev
      - POSTGRES_USER=athena
      - POSTGRES_PASSWORD=athena_password
    networks:
      - athena-network
    restart: unless-stopped
    profiles:
      - local-db

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local

networks:
  athena-network:
    driver: bridge

# Development overrides
# Use: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up
---
# docker-compose.dev.yml content (for development overrides)
version: '3.8'

services:
  backend:
    build:
      target: development
    volumes:
      - ./src:/app/src:cached
      - ./tests:/app/tests:cached
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - WATCHDOG_ENABLED=true

  frontend:
    volumes:
      - ./frontend:/app:cached
      - /app/node_modules
      - /app/.next
    environment:
      - WATCHPACK_POLLING=true 